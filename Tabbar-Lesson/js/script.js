$('#tab-contents .tab[id != "tab1"]').hide();

$('#tab-menu a').on('click', function(event) {
  $("#tab-contents .tab").hide();
  $("#tab-menu .active").removeClass("active");
  $(this).addClass("active");
  $($(this).attr("href")).show();
  event.preventDefault();
});

// 「クリックイベント」を設定
// ある値に等しくない要素を非表示にする
// 1行目の「$()関数」で、特定の属性を持つ要素や属性値を絞り込む

// 特定の属性を持つ要素のみ取得したい時は、以下のように記述
// $('要素[属性]')

// 属性値が特定の値に「等しい」要素だけを取得したい時は、以下のように記述
// $('要素[属性 = "値"]')

// 1行目のコードでは初期設定で表示されるのはTAB1のコンテンツだけにして、それ以外の内容は非表示にする。
// 属性値が特定の値に「等しくない」要素だけを取得したい時は、以下のように記述
// $('要素[属性 != "値"]')

// .hide();は、特定のHTML要素を非表示にするメソッド
// 1行目のコードは、「id="tab-contents"の要素のうち、 class="tab"であり、id="tab1"ではない要素が非表示になる」の意味


// クリックされた時の動作を設定
// $('#tab-menu a').on('click', function(event) {
//   // イベント発生時に行われる処理
// });

// 2行目からのコードは、「id="tab-menu"のaタグがクリックされた時、処理を実行してください」の意味

// 4行目で、id="tab-contents"内のいずれかのタブがクリックされた時、そのタブ内の全コンテンツをいったん非表示

// .removeClass()は、クラス属性が設定されているHTML要素から、クラスを削除するメソッド
// 5行目では、activeが削除対象のクラスとして指定
// CSSの40~43行目の設定では、タブのクラスがactiveのときは背景色が白色／文字色が黒色になるように設定
// タブを切り替える時は、このCSS設定もいったん削除しなければならないため、.removeClass()にactiveクラスを指定

// .addClass()は、任意のHTML要素にクラス属性を追加できるメソッド
// 6行目では、activeが追加対象のクラスとして指定
// $(this)（タブがクリックされた時）により、activeクラスが追加

// .attr()は、HTML要素の属性を取得したり設定できるメソッド
// 7行目で、href属性を取得するように指定
// .show()は、要素を表示するメソッド
// $(this)（タブがクリックされた時）により、取得したhref属性の中身が表示される
